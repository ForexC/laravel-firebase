{"name":"Laravel-firebase","tagline":"A Firebase port for Laravel (4.2+)","body":"laravel-firebase\r\n================\r\n\r\nA Firebase port for Laravel (4.2+)\r\n\r\n\r\n##Configuration\r\n\r\nInstall via composer.  If you have `minimum-stability` set to `stable`, you should add a `@beta` or `@dev` in order to use the `php-jwt` library (a dependency managed by firebase for generating JSON web token).\r\n\r\nAdd the following line to your `composer.json` and run composer update:\r\n\r\n\t{\r\n\t  \"require\": {\r\n\t    \"j42/laravel-firebase\": \"dev-master\"\r\n\t  }\r\n\t}\r\n\r\nThen add the service providers and facades to `config/app.php`\r\n\r\n\t'J42\\LaravelFirebase\\LaravelFirebaseServiceProvider',\r\n\r\n...\r\n\r\n\t'Firebase'\t\t  => 'J42\\LaravelFirebase\\LaravelFirebaseFacade'\r\n\r\n\r\n###Access Tokens\r\n\r\nFinally, you should configure your firebase connection in the `config/database.php` array.  There are two ways you can define this:\r\n\r\n####Simple Access Token**\r\n\r\n```php\r\n'firebase' => array(\r\n\t'host'\t\t=> 'https://<you>.firebaseio.com/',\r\n\t'token'\t\t=> '<yoursecret>',\r\n\t'timeout'\t=> 10,\r\n\t'sync'\t\t=> true,\t\t\t// OPTIONAL: auto-sync all Eloquent models with Firebase?\r\n)\r\n```\r\n\r\n####Advanced: Request a JWT**\r\n\r\nThis accepts any of the standard options allowed by the firebase [security rules](https://www.firebase.com/docs/security/security-rules.html) and will generate a JSON Web Token for more granular authentication (subject to auth security rules and expirations).\r\n\r\n```php\r\n'firebase' => array(\r\n\t'host'\t\t=> 'https://servicerunner.firebaseio.com/',\r\n\t'token'\t\t=> [\r\n\t\t'secret'\t=> '<yoursecret>',\r\n\t\t'options'\t=> [\r\n\t\t\t'auth'\t=> [\r\n\t\t\t\t'email' => 'example@yoursite.com'\r\n\t\t\t]\r\n\t\t],\r\n\t\t'data'\t\t=> []\r\n\t],\r\n\t'timeout'\t=> 10,\r\n\t'sync'\t\t=> true,\t\t\t// OPTIONAL: auto-sync all Eloquent models with Firebase?\r\n)\r\n```\r\n\r\n\r\nThe **LaravelFirebase** service is loaded into the IoC container as a singleton, containing a Guzzle instance used to interact with Firebase.\r\n\r\n\r\n\r\n###Model Syncing\r\n\r\nBy default this package will keep your Eloquent models in sync with Firebase.  That means that whenever `eloquent.saved: *` is fired, the model will be pushed to Firebase.  \r\n\r\nThis package will automatically look for 'id', '_id', and '$id' variables on the model so that Firebase paths are normalized like so:\r\n\r\n```php\r\n\r\n// Eloquent model: User\r\n// Firebase location: /users/{user::id}\r\n\r\n$User = new User(['name' => 'Julian']);\r\n\r\n$User->save();\t// Pushed to firebase\r\n\r\n$Copy = Firebase::get('/users/'.$User->id, 'User'); \t// === copy of $User\r\n$Copy = Firebase::get($User);\t\t\t\t\t\t\t// === copy of $User\r\n\r\n```\r\n\r\n**To disable this, please add `'sync' => false` to your database.connections.firebase configuration array.**\r\n\r\nThis works with any package that overwrites the default Eloquent model SO LONG AS it is configured to fire the appropriate `saved` and `updated` events.  At the moment it is tested with the base `Illuminate...Model` as well as the [Jenssegers MongoDB Eloquent Model](https://github.com/jenssegers/laravel-mongodb)\r\n\r\n\r\n##Getting Started\r\n\r\nMaking simple get requests:\r\n\r\n```php\r\n// Returns: (Array) of data items\r\nFirebase::get('/my/path');\r\n\r\n// Returns: (\\Illuminate\\Database\\Eloquent\\Collection) Eloquent collection of Eloquent models\r\nFirebase::get('/my/path', 'ValidEloquentModelClass');\r\n\r\n// Returns: (\\Illuminate\\Database\\Eloquent\\Model) Single Eloquent model\r\n// Conditions: $SomeModelInstance must inherit from Eloquent at some point, and have a (id, _id, or $id) property\r\nFirebase::get($SomeModelInstance);\r\n\r\n\r\n// Returns: (Array) Firebase response\r\nFirebase::set('/my/path', $data);\r\n\r\n// Returns: (Array) Firebase response\r\nFirebase::push('/my/path', $data);\r\n\r\n// Returns: (Array) Firebase response\r\nFirebase::delete('/my/path');\r\n```\r\n\r\n\r\n##Advanced Use\r\n\r\n#####Create a token manually\r\n\r\n```php\r\n$FirebaseTokenGenerator = new J42\\LaravelFirebase\\FirebaseToken(FIREBASE_SECRET);\r\n$Firebase = App::make('firebase');\r\n\r\n$token = $FirebaseTokenGenerator->create($data, $options);\r\n\r\n$Firebase->setToken($token);\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}